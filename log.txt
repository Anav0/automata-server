
======== 1. loop ========

P: [[6], [0, 1, 2, 3, 4, 5]]
L: ['6|0', '6|1', '6|2']
States: [5] are entering ['6'] via symbol: 0

Looking for subset 'B' of P to break apart

1. B: [6] cannot be broken by [5]

2. B: [0, 1, 2, 3, 4, 5] broken by: [5] to: [[0, 1, 2, 3, 4], [5]]
P after breaking up: [[6], [0, 1, 2, 3, 4], [5]]
L before filling: ['6|1', '6|2']
Added 50 to L
Added 51 to L
Added 52 to L
L after filling: ['6|1', '6|2', '5|0', '5|1', '5|2']

======== 2. loop ========

P: [[6], [0, 1, 2, 3, 4], [5]]
L: ['6|1', '6|2', '5|0', '5|1', '5|2']
States: [4] are entering ['6'] via symbol: 1

Looking for subset 'B' of P to break apart

1. B: [6] cannot be broken by [4]

2. B: [0, 1, 2, 3, 4] broken by: [4] to: [[0, 1, 2, 3], [4]]
P after breaking up: [[6], [5], [0, 1, 2, 3], [4]]
L before filling: ['6|2', '5|0', '5|1', '5|2']
Added 40 to L
Added 41 to L
Added 42 to L
L after filling: ['6|2', '5|0', '5|1', '5|2', '4|0', '4|1', '4|2']

3. B: [5] cannot be broken by [4]

======== 3. loop ========

P: [[6], [5], [0, 1, 2, 3], [4]]
L: ['6|2', '5|0', '5|1', '5|2', '4|0', '4|1', '4|2']
States: [2] are entering ['6'] via symbol: 2

Looking for subset 'B' of P to break apart

1. B: [6] cannot be broken by [2]

2. B: [5] cannot be broken by [2]

3. B: [0, 1, 2, 3] broken by: [2] to: [[0, 1, 3], [2]]
P after breaking up: [[6], [5], [4], [0, 1, 3], [2]]
L before filling: ['5|0', '5|1', '5|2', '4|0', '4|1', '4|2']
Added 20 to L
Added 21 to L
Added 22 to L
L after filling: ['5|0', '5|1', '5|2', '4|0', '4|1', '4|2', '2|0', '2|1', '2|2']

4. B: [4] cannot be broken by [2]

======== 4. loop ========

P: [[6], [5], [4], [0, 1, 3], [2]]
L: ['5|0', '5|1', '5|2', '4|0', '4|1', '4|2', '2|0', '2|1', '2|2']
States: [1, 4] are entering ['5'] via symbol: 0

Looking for subset 'B' of P to break apart

1. B: [6] cannot be broken by [1, 4]

2. B: [5] cannot be broken by [1, 4]

3. B: [4] cannot be broken by [1, 4]

4. B: [0, 1, 3] broken by: [1, 4] to: [[0, 3], [1]]
P after breaking up: [[6], [5], [4], [2], [0, 3], [1]]
L before filling: ['5|1', '5|2', '4|0', '4|1', '4|2', '2|0', '2|1', '2|2']
Added 10 to L
Added 11 to L
Added 12 to L
L after filling: ['5|1', '5|2', '4|0', '4|1', '4|2', '2|0', '2|1', '2|2', '1|0', '1|1', '1|2']

5. B: [2] cannot be broken by [1, 4]

======== 5. loop ========

P: [[6], [5], [4], [2], [0, 3], [1]]
L: ['5|1', '5|2', '4|0', '4|1', '4|2', '2|0', '2|1', '2|2', '1|0', '1|1', '1|2']
Nothing enters ['5'] via symbol: 1

======== 6. loop ========

P: [[6], [5], [4], [2], [0, 3], [1]]
L: ['5|2', '4|0', '4|1', '4|2', '2|0', '2|1', '2|2', '1|0', '1|1', '1|2']
States: [4] are entering ['5'] via symbol: 2

Looking for subset 'B' of P to break apart

1. B: [6] cannot be broken by [4]

2. B: [5] cannot be broken by [4]

3. B: [4] cannot be broken by [4]

4. B: [2] cannot be broken by [4]

5. B: [0, 3] cannot be broken by [4]

6. B: [1] cannot be broken by [4]

======== 7. loop ========

P: [[6], [5], [4], [2], [0, 3], [1]]
L: ['4|0', '4|1', '4|2', '2|0', '2|1', '2|2', '1|0', '1|1', '1|2']
States: [2] are entering ['4'] via symbol: 0

Looking for subset 'B' of P to break apart

1. B: [6] cannot be broken by [2]

2. B: [5] cannot be broken by [2]

3. B: [4] cannot be broken by [2]

4. B: [2] cannot be broken by [2]

5. B: [0, 3] cannot be broken by [2]

6. B: [1] cannot be broken by [2]

======== 8. loop ========

P: [[6], [5], [4], [2], [0, 3], [1]]
L: ['4|1', '4|2', '2|0', '2|1', '2|2', '1|0', '1|1', '1|2']
States: [2] are entering ['4'] via symbol: 1

Looking for subset 'B' of P to break apart

1. B: [6] cannot be broken by [2]

2. B: [5] cannot be broken by [2]

3. B: [4] cannot be broken by [2]

4. B: [2] cannot be broken by [2]

5. B: [0, 3] cannot be broken by [2]

6. B: [1] cannot be broken by [2]

======== 9. loop ========

P: [[6], [5], [4], [2], [0, 3], [1]]
L: ['4|2', '2|0', '2|1', '2|2', '1|0', '1|1', '1|2']
States: [3] are entering ['4'] via symbol: 2

Looking for subset 'B' of P to break apart

1. B: [6] cannot be broken by [3]

2. B: [5] cannot be broken by [3]

3. B: [4] cannot be broken by [3]

4. B: [2] cannot be broken by [3]

5. B: [0, 3] broken by: [3] to: [[0], [3]]
P after breaking up: [[6], [5], [4], [2], [1], [0], [3]]
L before filling: ['2|0', '2|1', '2|2', '1|0', '1|1', '1|2']
Added 30 to L
Added 31 to L
Added 32 to L
L after filling: ['2|0', '2|1', '2|2', '1|0', '1|1', '1|2', '3|0', '3|1', '3|2']

6. B: [1] cannot be broken by [3]

======== 10. loop ========

P: [[6], [5], [4], [2], [1], [0], [3]]
L: ['2|0', '2|1', '2|2', '1|0', '1|1', '1|2', '3|0', '3|1', '3|2']
Nothing enters ['2'] via symbol: 0

======== 11. loop ========

P: [[6], [5], [4], [2], [1], [0], [3]]
L: ['2|1', '2|2', '1|0', '1|1', '1|2', '3|0', '3|1', '3|2']
States: [3, 5] are entering ['2'] via symbol: 1

Looking for subset 'B' of P to break apart

1. B: [6] cannot be broken by [3, 5]

2. B: [5] cannot be broken by [3, 5]

3. B: [4] cannot be broken by [3, 5]

4. B: [2] cannot be broken by [3, 5]

5. B: [1] cannot be broken by [3, 5]

6. B: [0] cannot be broken by [3, 5]

7. B: [3] cannot be broken by [3, 5]

======== 12. loop ========

P: [[6], [5], [4], [2], [1], [0], [3]]
L: ['2|2', '1|0', '1|1', '1|2', '3|0', '3|1', '3|2']
States: [5] are entering ['2'] via symbol: 2

Looking for subset 'B' of P to break apart

1. B: [6] cannot be broken by [5]

2. B: [5] cannot be broken by [5]

3. B: [4] cannot be broken by [5]

4. B: [2] cannot be broken by [5]

5. B: [1] cannot be broken by [5]

6. B: [0] cannot be broken by [5]

7. B: [3] cannot be broken by [5]

======== 13. loop ========

P: [[6], [5], [4], [2], [1], [0], [3]]
L: ['1|0', '1|1', '1|2', '3|0', '3|1', '3|2']
States: [0, 3] are entering ['1'] via symbol: 0

Looking for subset 'B' of P to break apart

1. B: [6] cannot be broken by [0, 3]

2. B: [5] cannot be broken by [0, 3]

3. B: [4] cannot be broken by [0, 3]

4. B: [2] cannot be broken by [0, 3]

5. B: [1] cannot be broken by [0, 3]

6. B: [0] cannot be broken by [0, 3]

7. B: [3] cannot be broken by [0, 3]

======== 14. loop ========

P: [[6], [5], [4], [2], [1], [0], [3]]
L: ['1|1', '1|2', '3|0', '3|1', '3|2']
Nothing enters ['1'] via symbol: 1

======== 15. loop ========

P: [[6], [5], [4], [2], [1], [0], [3]]
L: ['1|2', '3|0', '3|1', '3|2']
Nothing enters ['1'] via symbol: 2

======== 16. loop ========

P: [[6], [5], [4], [2], [1], [0], [3]]
L: ['3|0', '3|1', '3|2']
Nothing enters ['3'] via symbol: 0

======== 17. loop ========

P: [[6], [5], [4], [2], [1], [0], [3]]
L: ['3|1', '3|2']
States: [0, 1] are entering ['3'] via symbol: 1

Looking for subset 'B' of P to break apart

1. B: [6] cannot be broken by [0, 1]

2. B: [5] cannot be broken by [0, 1]

3. B: [4] cannot be broken by [0, 1]

4. B: [2] cannot be broken by [0, 1]

5. B: [1] cannot be broken by [0, 1]

6. B: [0] cannot be broken by [0, 1]

7. B: [3] cannot be broken by [0, 1]

======== 18. loop ========

P: [[6], [5], [4], [2], [1], [0], [3]]
L: ['3|2']
States: [0, 1] are entering ['3'] via symbol: 2

Looking for subset 'B' of P to break apart

1. B: [6] cannot be broken by [0, 1]

2. B: [5] cannot be broken by [0, 1]

3. B: [4] cannot be broken by [0, 1]

4. B: [2] cannot be broken by [0, 1]

5. B: [1] cannot be broken by [0, 1]

6. B: [0] cannot be broken by [0, 1]

7. B: [3] cannot be broken by [0, 1]


Final P: [[6], [5], [4], [2], [1], [0], [3]]

Minimized automata transition table:

	0	1	2	
6'	0	0	0
5	6	2	2
4	5	6	5
2	4	4	6
1	5	3	3
0_	1	3	3
3	1	2	4

